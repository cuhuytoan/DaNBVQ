@using Microsoft.Extensions.Configuration
@using Mono.Web
@inject IConfiguration Configuration

@{
    ViewBag.Title = $"Chuyên mục hồ sơ {ViewBag.CareeName}- HANOMA.VN";

    var MenuMachine = (HNM.DataNC.ModelsNC.ModelsDTO.ListProductCategoryDTO)ViewBag.MenuMachine;
    var MenuMaterials = (HNM.DataNC.ModelsNC.ModelsDTO.ListProductCategoryDTO)ViewBag.MenuMaterials;
    var MenuServices = (HNM.DataNC.ModelsNC.ModelsDTO.ListProductCategoryDTO)ViewBag.MenuServices;

    var LstCareerCategory = (List<HNM.DataNC.ModelsNC.ModelsDTO.CareerCategoryDTO>)ViewBag.LstCareerCategory;
    var LstCvByCate = (List<HNM.DataNC.ModelsNC.ModelsDTO.CVSearchDTO>)ViewBag.LstCvByCate;

    int currentPage = ViewBag.Page;
    int pageSize = ViewBag.PageSize;
    int TotalPages = ViewBag.TotalPages;

    var SalaryOptions = new List<SelectListItem>() {
        new SelectListItem
        {
            Text = "Tất cả mức lương",
            Value = "-1"
        },
        new SelectListItem
        {
            Text = "Từ 0 đến 10 triệu vnđ",
            Value = "1"
        },
        new SelectListItem
        {
            Text = "Từ 10 đến 20 triệu",
            Value = "2"
        },
         new SelectListItem
        {
            Text = "Từ 20 đến 30 triệu vnđ",
            Value = "3"
        },
          new SelectListItem
        {
            Text = "Trên 30 triệu vnđ",
            Value = "4"
        }
    };
}
@section metatags{
    <meta name="keywords" content="@HttpUtility.HtmlDecode(@Configuration["DefaultKeyword"])" />
    <meta name="description" content="@HttpUtility.HtmlDecode(@Configuration["DefaultDescription"])" />
    <link id="canonical" rel="canonical" href="@Configuration["DomainName"]/ho-so/@ViewBag.UrlCv" />

    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/style.css" rel="stylesheet" />
    <link href="~/css/responsive.css" rel="stylesheet" />
    <link href="https://kendo.cdn.telerik.com/2020.1.114/styles/kendo.bootstrap-v4.min.css" rel="stylesheet" type="text/css" />
    <script src="https://kendo.cdn.telerik.com/2020.1.114/js/kendo.all.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2020.1.114/js/kendo.aspnetmvc.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2020.1.114/js/cultures/kendo.culture.vi-VN.min.js"></script>
    <style>
        @@media only screen and (max-width: 400px) {
            .input-box {
                padding-right: 0px;
            }
        }

        .input-box {
            padding-top: 10px;
        }
    </style>
}
<!-- Content -->
<section class="category ">
    @await Html.PartialAsync("CurriculumVitaeHeader.cshtml")

    <article>
        <div class="d-lg-flex d-block mt-3">
            <div class="col-lg-8 col-md-12 pr-3 pr-lg-0 ">
                <div class="banner-container swiper-container">
                    <div class="swiper-wrapper">
                        <div class="swiper-slide"><img src="~/Assets/images/banner/to.webp" /></div>
                        <div class="swiper-slide"><img src="~/Assets/images/banner/to1.webp" /></div>
                        <div class="swiper-slide"><img src="~/Assets/images/banner/to2.webp" /></div>
                        <div class="swiper-slide"><img src="~/Assets/images/banner/to3.webp" /></div>
                        <div class="swiper-slide"><img src="~/Assets/images/banner/to4.jpg" /></div>
                    </div>
                    <div class="swiper-pagination paging-right"></div>
                    <div class="swiper-button-next swiper-button"></div>
                    <div class="swiper-button-prev swiper-button"></div>
                </div>
            </div>
            <div class="col-xl-4 col-lg-5 d-flex px-0 d-lg-block   mt-3 mt-lg-0">
                <div class="col-lg-12 col-sm-6 col-6 pr-2 px-sm-3"><img class="mb-3 mb-xl-3 mb-lg-0" src="~/images/maydeban/maydeban2.jpg" /></div>
                <div class="col-lg-12 col-sm-6 col-6 pl-2 px-sm-3"><img src="~/images/maydeban/maydeban3.jpg" /></div>
            </div>
        </div>
        <div class="container">
            <div class="menu-container d-block d-lg-flex navbar navbar-expand-lg pb-2 mt-0 mt-lg-3 align-items-center category-list bg-white px-1">
                <a class="navbar-brand d-inline-block d-lg-none" href="#">Danh mục</a>

                <button class="navbar-toggler bg-black" type="button" data-toggle="collapse" data-target="#navbarNav-catemenu" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="manu navbar navbar-expand-lg category-menu col-12 col-lg-12 col-sm-12 d-block d-lg-flex  align-items-center p-0">
                    <nav class="collapse " id="navbarNav-catemenu">
                        <ul>
                            <li class="nav-item col-2-5">
                                <div class="link-box d-flex justify-content-between align-items-center">
                                    <a class="nav-link d-flex justify-content-start" href="/ho-so">Tất cả hồ sơ</a>
                                </div>
                            </li>

                            @foreach (var item in LstCareerCategory)
                            {
                                if (item.Id == ViewBag.Id)
                                {
                                    <li class="nav-item col-2-5 active">
                                        <div class="link-box d-flex justify-content-between align-items-center">
                                            <a class="nav-link d-flex justify-content-start" href=@string.Format($"/ho-so" + "/{0}-{1}", @item.URL, item.Id)>@item.Name</a>
                                        </div>
                                    </li>
                                }
                                else
                                {
                                    <li class="nav-item col-2-5">
                                        <div class="link-box d-flex justify-content-between align-items-center">
                                            <a class="nav-link d-flex justify-content-start" href=@string.Format($"/ho-so" + "/{0}-{1}", @item.URL, item.Id)>@item.Name</a>
                                        </div>
                                    </li>
                                }

                            }
                        </ul>

                    </nav>
                </div>
            </div>
        </div>
    </article>

    <article>
        <div class="container">
            <div class="search-module border-top pb-4 bg-white">
                <div class="title">
                    <h3 class="px-2 py-3">Bộ lọc</h3>
                </div>
                <div class="search-content row col-md-12" style="padding-right: 0px">
                    <div class=" input-box col-md-3 mb-2 mb-md-0 pl-md-0 pl-2">
                        @(Html.Kendo().ComboBox()
                                .Name("ProductCategoryId")
                                .HtmlAttributes(new {@class = "form-control"})
                                .Placeholder("Chọn Thiết bị liên quan....")
                                .DataTextField("Name")
                                .DataValueField("ProductCategoryId")
                                .Filter("contains")
                                .Suggest(true)
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetLstProductCateLv1", "Service");
                                    }).ServerFiltering(false);
                                })
                            )
                    </div>
                    <div class=" input-box col-md-3 mb-2 mb-md-0 pl-md-0 pl-2">
                        @(Html.Kendo().ComboBox()
                                .Name("ProductCategoryIdLv2")
                                .HtmlAttributes(new {@class = "form-control"})
                                .Placeholder("Chọn Loại máy....")
                                .DataTextField("Name")
                                .DataValueField("ProductCategoryId")
                                .Filter("contains")
                                .Suggest(true)
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetLstProductCateLv2", "Service").Data("filterModels");
                                    }).ServerFiltering(true);
                                })
                                .Events(e =>
                                {
                                    e.Change("onChangeLv2").Close("onSelectLv2").Filtering("onFiltering");
                                })
                                .Enable(false)
                                .AutoBind(false)
                                .CascadeFrom("ProductCategoryId")
                            )
                    </div>
                    <div class="input-box col-md-2 mb-2 mb-md-0 pl-md-0 pl-2">
                        @(Html.Kendo().NumericTextBox()
                                    .Name("YearOfExprience")
                                    .HtmlAttributes(new { @class = "form-control" })
                                    .Placeholder("Năm kinh nghiệm")
                                    .Min(1)
                                    .Max(40).Events(e =>
                                {
                                    e.Change("onChangeEx");
                                })
                            )
                    </div>
                    <div class=" input-box col-md-2 mb-2 mb-md-0 pl-md-0 pl-2">
                        @(Html.Kendo().DropDownList()
                                .Name("Salary")
                                           .HtmlAttributes(new { @class = "form-control" })
                                           .DataTextField("Text")
                                           .DataValueField("Value")
                                           .BindTo(SalaryOptions).Events(e =>
                                {
                                    e.Change("onChangeSalary");
                                })
                            )
                    </div>
                    <div class=" input-box col-md-2 mb-2 mb-md-0 pl-md-0 pl-2">
                        @(Html.Kendo().ComboBox()
                                .Name("Location_ID")
                                .HtmlAttributes(new {@class = "form-control"})
                                .Placeholder("Chọn Tỉnh/Thành....")
                                .DataTextField("Name")
                                .DataValueField("Name")
                                .Filter("contains")
                                .Suggest(true)
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetAllLocation", "Service");
                                    }).ServerFiltering(false);
                                })
                                .Events(e =>
                                {
                                    e.Change("onChangeLocation").Close("onSelectLocation").Filtering("onFiltering");
                                })
                            )
                    </div>
                </div>
            </div>
        </div>
    </article>

    <div class="line-seprate  ">
        <div class="border-top border-bottom m-3 "></div>
    </div>

    <!-- Category page -->
    <article>
        <div id="data-result">

        </div>
    </article>
</section>


<script>
    $(document).ready(function () {
        LoadData();
        $("#YearOfExprience").kendoNumericTextBox({
            defaultValue: 0,
            decimals: 0,
            format: '0.'
        });
    });

    function ChangeUrl(page, pageSize) {
        var urlChange = "/ho-so/@ViewBag.UrlCv?id=" + @ViewBag.Id +"&page=" + page;
        history.pushState({}, "", urlChange);
    }

    function LoadData() {
        $.ajax({
            type: "GET",
            url: "/CurriculumVitae/GetPaggingCurriculumVitae?id=" + @ViewBag.Id + "&page=" + @currentPage + "&pageSize=" + @pageSize,
            dataType: "html",
            success: function (response) {
                $('#data-result').html(response);
            },
            failure: function (response) {

            },
            error: function (response) {

            }
        });
    }

    var ProductCategoryId = null, LocationName = null, Salary = null, YearOfExprience =  null;

    function onFiltering() {

    }

    function onChangeLv2(e) {
        ProductCategoryId = $("#ProductCategoryIdLv2").val();
        LoadDataByPageSize(9)
    }

    function onSelectLv2(e) {

    }

    function onChangeEx() {
        YearOfExprience = $("#YearOfExprience").val();
        LoadDataByPageSize(9)
    }

    function onChangeSalary() {
        Salary = $("#Salary").val();
        LoadDataByPageSize(9)
    }

    function onChangeLocation(e) {
        LocationName = $("#Location_ID").val();
        LoadDataByPageSize(9)
    }

    function onSelectLocation(e) {

    }

    function filterModels() {
        return {
            ProductCategoryId: $("#ProductCategoryId").val(),
            modelFilter: $("#ProductCategoryIdLv2").data("kendoComboBox").input.val()
        };
    }

    function LoadDataByPageSize(pageSize) {
        $.ajax({
            type: "GET",
            url: "/CurriculumVitae/GetPaggingCurriculumVitae?id=" + @ViewBag.Id + "&ProductCategoryId=" + ProductCategoryId + "&ProvinceName=" + LocationName + "&YearOfExprience=" + YearOfExprience +"&Salary=" + Salary + "&page=" + @currentPage + "&pageSize=" + pageSize,
            dataType: "html",
            success: function (response) {
                $('#data-result').html(response);
            },
            failure: function (response) {

            },
            error: function (response) {

            }
        });
    }
</script>


<script type="application/ld+json">
    {
    "@@context": "https://schema.org",
    "@@type": "Article",
    "mainEntityOfPage": {
    "@@type": "WebPage",
    "@@id": "https://daninhbinhvinhquang.vn/ho-so/@ViewBag.UrlCv"
    },
    "headline": "Article headline",
    "author": {
    "@@type": "Person",
    "name": "Hanoma.vn"
    },
    "publisher": {
    "@@type": "Organization",
    "name": "Hanoma.vn",
    "logo": {
    "@@type": "ImageObject",
    "url": "https://daninhbinhvinhquang.vn/assets/pages/img/logo_hanoma2.png"
    }
    },
    "description": "@Configuration["DefaultDescription"]"
    }
</script>
