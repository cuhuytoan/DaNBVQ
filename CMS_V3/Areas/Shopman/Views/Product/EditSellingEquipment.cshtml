@model HNM.DataNC.ModelsNC.ModelsDTO.ProductDetailsDTO
@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Sửa tin bán thiết bị";
    Layout = "~/Areas/Shopman/Views/Shared/_LayoutShopman.cshtml";

    var Countries = new List<SelectListItem>() { new SelectListItem { Text = "2020", Value = "2020" }, new SelectListItem { Text = "2019", Value = "2019" }, new SelectListItem { Text = "2018", Value = "2018" }, new SelectListItem { Text = "2017", Value = "2017" }, new SelectListItem { Text = "2016", Value = "2016" }, new SelectListItem { Text = "2015", Value = "2015" }, new SelectListItem { Text = "2014", Value = "2014" }, new SelectListItem { Text = "2013", Value = "2013" }, new SelectListItem { Text = "2012", Value = "2012" }, new SelectListItem { Text = "2011", Value = "2011" }, new SelectListItem { Text = "2010", Value = "2010" }, new SelectListItem { Text = "2009", Value = "2009" }, new SelectListItem { Text = "2008", Value = "2008" }, new SelectListItem { Text = "2007", Value = "2007" }, new SelectListItem { Text = "2006", Value = "2006" }, new SelectListItem { Text = "2005", Value = "2005" }, new SelectListItem { Text = "2004", Value = "2004" }, new SelectListItem { Text = "2003", Value = "2003" }, new SelectListItem { Text = "2002", Value = "2002" }, new SelectListItem { Text = "2001", Value = "2001" }, new SelectListItem { Text = "2000", Value = "2000" }, new SelectListItem { Text = "1999", Value = "1999" }, new SelectListItem { Text = "1998", Value = "1998" }, new SelectListItem { Text = "1997", Value = "1997" }, new SelectListItem { Text = "1996", Value = "1996" }, new SelectListItem { Text = "1995", Value = "1995" }, new SelectListItem { Text = "1994", Value = "1994" }, new SelectListItem { Text = "1993", Value = "1993" }, new SelectListItem { Text = "1992", Value = "1992" }, new SelectListItem { Text = "1991", Value = "1991" }, new SelectListItem { Text = "1990", Value = "1990" }, new SelectListItem { Text = "1989", Value = "1989" }, new SelectListItem { Text = "1988", Value = "1988" }, new SelectListItem { Text = "1987", Value = "1987" }, new SelectListItem { Text = "1986", Value = "1986" }, new SelectListItem { Text = "1985", Value = "1985" }, new SelectListItem { Text = "1984", Value = "1984" }, new SelectListItem { Text = "1983", Value = "1983" }, new SelectListItem { Text = "1982", Value = "1982" }, new SelectListItem { Text = "1981", Value = "1981" }, new SelectListItem { Text = "1980", Value = "1980" }, new SelectListItem { Text = "1979", Value = "1979" }, new SelectListItem { Text = "1978", Value = "1978" }, new SelectListItem { Text = "1977", Value = "1977" }, new SelectListItem { Text = "1976", Value = "1976" }, new SelectListItem { Text = "1975", Value = "1975" }, new SelectListItem { Text = "1974", Value = "1974" }, new SelectListItem { Text = "1973", Value = "1973" }, new SelectListItem { Text = "1972", Value = "1972" }, new SelectListItem { Text = "1971", Value = "1971" }, new SelectListItem { Text = "1970", Value = "1970" } };}
@{
    var parentName = ViewBag.ParentName;
    var parentID = ViewBag.ParentID;
    var textImage = "";

    int stt = 1;
    foreach (var item in Model.ProductPictures)
    {
        int i = stt++;
        if (i <= 1)
        {
            textImage = textImage + "\"" + item.UrlImage + "\"";
        }
        else
        {
            textImage = textImage + ",\"" + item.UrlImage + "\"";
        }

    }
}

<style>
    .k-combobox .k-dropdown-wrap {
        border-color: #F1F1F1;
        color: #212529;
        background-color: #F1F1F1;
    }

    .k-dropdown .k-dropdown-wrap, .k-dropdowntree .k-dropdown-wrap {
        border-color: #F1F1F1;
        background-color: #F1F1F1;
    }
</style>

<div class="col-12 col-lg-10  content-right">
    <form class="bg-white px-3 pt-3 pb-5" action="/ShopMan/Product/EditProduct" method="post" enctype="multipart/form-data" onsubmit="return CreateDemand()">
        <div class="text-center mb-4">
            <h3 class="font-weight-bold">SỬA TIN BÁN THIẾT BỊ</h3>
        </div>
        <div class="title">
            <h4 class="text-uppercase  font-weight-bold py-3">HÌNH ẢNH</h4>
        </div>
        <div class="  row">
            <div class="col-12 col-lg-3 col-md-5 pr-md-0 mb-3 mb-md-0">
                <div class="custom-file-container" data-upload-id="cover-img">
                    <label style="display: none;">
                        Upload File
                        <a href="javascript:void(0)"
                           class="custom-file-container__image-clear"
                           title="Clear Image">&times;</a>
                    </label>
                    <input type="file"
                           class="custom-file-container__custom-file__custom-file-input"
                           accept="image/jpeg, image/png, image/gif, image/svg+xml"
                           aria-label="Choose File" name="MainImage" id="MainImage" onchange="onSelectMain()" />
                    <input type="hidden" name="MAX_FILE_SIZE" value="2097152" />
                    <div class="custom-file-container__image-preview">
                        <label class="custom-file-container__custom-file">

                            <span class="custom-file-container__custom-file__custom-file-control"></span>
                        </label>

                    </div>
                </div>

            </div>
            <div class="col-12 col-lg-9 col-md-7">
                <div class="custom-file-container" data-upload-id="thumb-img">
                    <label style="display: none;">
                        Upload File
                        <a href="javascript:void(0)"
                           class="custom-file-container__image-clear"
                           title="Clear Image">&times;</a>
                    </label>
                    <input type="file"
                           class="custom-file-container__custom-file__custom-file-input"
                           accept="image/jpeg, image/png, image/gif, image/svg+xml"
                           multiple
                           aria-label="Choose File" name="SubImage" id="SubImage" onchange="onSelectSub()" />
                    <input type="hidden" name="MAX_FILE_SIZE" value="2097152" />

                    <div class="custom-file-container__image-preview">
                        <label class="custom-file-container__custom-file">
                            <span class="custom-file-container__custom-file__custom-file-control"></span>
                        </label>

                    </div>
                </div>
            </div>
        </div>
        <div class="">
            <div class="title">
                <h4 class="text-uppercase  font-weight-bold py-3">THÔNG TIN SẢN PHẨM</h4>
                <input type="text" class="form-control" id="Product_ID" name="ProductId" value="@Model.ProductDetails.Product_ID" hidden="hidden">
            </div>
            <div class="form-group">
                <label for="inputAddress">Tiêu đề bài đăng:*</label>
                <input type="text" class="form-control" value="@Model.ProductDetails.Name" id="Name" name="Name" placeholder="VD: Tượng đá">
            </div>
            <div class="row form-group">
                <div class="col-12 col-sm-6">
                    <label for="inputAddress">Chọn chủng loại cấp 1:*</label>
                    @(Html.Kendo().ComboBox()
                        .Text(Model.ProductDetails.ParenfProductCategoryName)
                        .Value(Model.ProductDetails.ParenfProductCategory_ID.ToString())
                        .Name("ProductCategoryIdParent")
                        .HtmlAttributes(new {@class = "form-control"})
                        .Placeholder("Chọn Thiết bị liên quan....")
                        .DataTextField("Name")
                        .DataValueField("ProductCategoryId")
                        .Filter("contains")
                        .Suggest(true)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetLstProductCateLv1", "Product");
                            }).ServerFiltering(false);
                        })
                    )
                </div>
                <div class="col-12 col-sm-6">
                    <label for="inputAddress">Chọn chủng loại cấp 2:*</label>
                    @(Html.Kendo().ComboBox()
                      .Text(Model.ProductDetails.ProductCategoryName)
                      .Value(Model.ProductDetails.ProductCategory_ID.ToString())
                      .Name("ProductCategoryId")
                      .HtmlAttributes(new {@class = "form-control"})
                      .Placeholder("Chọn Loại máy....")
                      .DataTextField("Name")
                      .DataValueField("ProductCategoryId")
                      .Filter("contains")
                      .Suggest(true)
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetLstProductCateLv2", "Product").Data("filterModelsAccess");
                          }).ServerFiltering(true);
                      })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("ProductCategoryIdParent")
                      )
                </div>
            </div>

     

            <div class="row ">
                <div class="col-12 col-sm-6  form-group">
                    <div class="row form-group">
                        <div class="col">
                            <label for="StatusMachine">Tình trạng:*</label>
                            @if (Model.ProductDetails.StatusMachine == "Mới")
                            {
                                <select name="StatusMachine" id="StatusMachine" class="form-control">
                                    <option selected="selected" value="Mới">Mới</option>
                                    <option value="Đã qua sử dụng">Đã qua sử dụng</option>
                                </select>
                            }
                            else
                            {
                                <select name="StatusMachine" id="StatusMachine" class="form-control">
                                    <option value="Mới">Mới</option>
                                    <option selected="selected" value="Đã qua sử dụng">Đã qua sử dụng</option>
                                </select>
                            }
                        </div>
                        <div class="col pl-0 pl-sm-3">
                            <label for="inputAddress">Năm sản xuất:</label>
                            @(Html.Kendo().DropDownList()
                                .Text(Model.ProductDetails.YearManufacture.ToString())
                                .Value(Model.ProductDetails.YearManufacture.ToString())
                                .Name("YearManufacture")
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .BindTo(Countries)
                                .HtmlAttributes(new {@class = "form-control"})
                                .Filter("contains")
                                )
                        </div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 ">
                    <div class="row form-group">
                        <div class="col">
                            <label for="inputAddress">Giá bán:</label>
                            <input type="number" value="@Convert.ToInt64(Convert.ToDecimal(Model.ProductDetails.Price))" class="form-control" name="Price" id="Price" placeholder="VD: 10000000">
                        </div>
                        <div class="col pl-0 pl-sm-3">
                            <label for="inputAddress">&nbsp;</label>
                            @(Html.Kendo().DropDownList()
                                .Text(Model.ProductDetails.UnitName)
                                .Value(Model.ProductDetails.Unit)
                                .Name("Unit")
                                .HtmlAttributes(new {@class = "form-control"})
                                .DataTextField("Name")
                                .DataValueField("Id")
                                .Filter("contains")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetAllUnit", "Product");
                                    }).ServerFiltering(false);
                                })
                                )
                        </div>
                    </div>
                </div>
            </div>

        
            

            <div class="form-group">
                <label for="inputAddress">Nội dung chi tiết:*</label>
                @(Html.Kendo().Editor()
                    .Value(Model.ProductDetails.Content)
                    .Name("Content")
                    .HtmlAttributes(new { style = "width:100%;min-height: 50px;", placeholder = "Nhập nội dung mô tả ở đây..", aria_label = "editor"})
                    .Resizable(resizable => resizable.Content(true).Toolbar(true))

                    //.Placeholder("Nhập nội dung mô tả ở đây...")
                    .Messages(p =>
                    {
                        p.Bold("Chữ đậm");
                        p.Underline("gạch chân");
                        p.Bold("Chữ đậm");
                        p.Italic("Chữ nghiêng");
                        p.Indent("Thụt lề");
                        p.InsertImage("Thêm ảnh");
                        p.InsertHtml("Thêm HTML");
                        p.FontName("Chọn font");
                        p.ImageWebAddress("Địa chỉ web");
                    })
                    .Tools(tools => tools
                       .Clear()
                        .Bold().Italic().Underline().Strikethrough()
                        .Outdent().Indent()
                        .CreateLink().Unlink()
                        .InsertImage()
                        .InsertFile()
                        .TableEditing()
                        .ViewHtml()
                    )
             .StyleSheets(css => css
                 .Add(Url.Content("~/css/Editor.css"))
             )
       )
            </div>

            <div class="text-center">
                <div class=" justify-content-center d-block text-center mt-3">
                    <button type="submit" class="btn btn-primary  px-5">Đăng bài</button>
                </div>
            </div>

        </div>
    </form>

</div>

<script src="~/Assets/js/file-upload-with-preview.min.js"></script>
<script src="~/Assets/js/validation-product.js"></script>
<script src="~/Assets/jsController/EditFormImageUpload.js"></script>
<script>
    var upload = new FileUploadWithPreview("cover-img", {
        text: {
            chooseFile: "",
            browse: "Chọn ảnh đại diện bài viết"
        },
        presetFiles: ["@Model.ProductDetails.UrlImage"]
    });
    var upload1 = new FileUploadWithPreview("thumb-img", {
        maxFileCount: 20,
        text: {
            chooseFile: "",
            browse: "Ảnh mô tả"
        },
        presetFiles: [@Html.Raw(textImage)]
    });
</script>

<script>
    $(document).ready(function () {
        $("#QLSP").addClass("active");
        var comboStatus = $('#StatusMachine').val();
        if (comboStatus == "Mới") {
            var y = document.getElementById('blockStatus');
            y.style.display = "none";
        }
        else {
            var y = document.getElementById('blockStatus');
            y.style.display = "block";
        }
    });

    $("#StatusMachine").change(function () {
        var comboStatus = $('#StatusMachine').val();
        if (comboStatus == "Mới") {
            var y = document.getElementById('blockStatus');
            y.style.display = "none";
        }
        else {
            var y = document.getElementById('blockStatus');
            y.style.display = "block";
        }
    });

    function CreateDemand() {
        var subImageList = [];
        var ProductModelId = $("#ProductModelId").val();

        $('input[name^="SubImageUpload"]').each(function () {
            subImageList.push($(this).val());
        });

        if (subImageList.length < 1) {
            toastr.error('Ảnh mô tả không được để trống!');
            return false;
        }
        if ($("#Name").val() == "") {
            toastr["error"]("Tiêu đề bài đăng không được để trống");
            $("#Name").focus();
            return false;
        }
        if (!checkSpecialCharacter($("#Name").val())) {
            toastr["error"]("Tiêu đề bài đăng được nhập các ký tự đặc biệt");
            $("#Name").focus();
            return false;
        }

        if ($("#Name").val().length > 100) {
            toastr["error"]("Tiêu đề không được quá 100 ký tự");
            $("#Name").focus();
            return false;
        }

        var productcateId = $("#ProductCategoryId").val();
        if (productcateId < 1) {
            toastr["error"]("Loại máy không được để trống");
            return false;
        }

        if (isNaN(productcateId)) {
            toastr["error"]("Loại máy không tồn tại");
            return false;
        }
     



        if ($("#StatusMachine").val().length < 1) {
            toastr["error"](validationMessage.StatusMachine_Empty);
            $("#StatusMachine").focus();
            return false;
        }
        if ($("#HoursOfWork").val().length > 10) {
            toastr["error"](validationMessage.HoursOfWork_MaxLength);
            $("#HoursOfWork").focus();
            return false;
        }

      

        var content = $("#Content").val();

        if (content == "") {
            toastr["error"]("Nội dung chi tiết không để trống");
            $("#Content").focus();
            return false;
        }

        if (content.length < 10) {
            toastr["error"]("Nội dung chi tiết không được nhỏ hơn 10 ký tự");
            $("#Content").focus();
            return false;
        }

        if (content.length > 4000) {
            toastr["error"]("Nội dung chi tiết không được lớn hơn 4000 ký tự");
            $("#Content").focus();
            return false;
        }

        toastr["success"]("Sửa tin đăng bán thiết bị thành công");
    }


    function onFiltering() {

    }

    function onChangeLv2(e) {
        ProductCategoryId = $("#ProductCategoryIdLv2").val();
    }

    function onSelectLv2(e) {

    }

    function onChangeLocation(e) {
        LocationName = $("#Location_ID").val();
    }

    function onSelectLocation(e) {

    }

    function onChangeModel() {
        var ModelID = $("#ProductModelId").val();
        //GenTitleName();
        changeModelValue(ModelID);
    }

    function filterModelsAccess() {
        return {
            ProductCategoryId: $("#ProductCategoryIdParent").val(),
            modelFilter: $("#ProductCategoryId").data("kendoComboBox").input.val()
        };
    }

    //function filterModelsManu() {
    //    return {
    //        ProductCategoryId: $("#ProductCategoryId").val(),
    //        modelFilter: $("#ProductManufactureId").data("kendoComboBox").input.val()
    //    };
    //}

    function filterModelsModel() {
        return {
            ManufactoryId: $("#ProductManufactureId").val(),
            ProductCategoryId: $("#ProductCategoryId").val(),
            modelFilter: $("#ProductModelId").data("kendoComboBox").input.val(),
            text: $("#ProductModelId").data("kendoComboBox").input.val()
        };
    }

    function filterModelsMaterial() {
        return {
            ProductCategoryId: $("#ProductCategoryIdParent").val(),
            modelFilter: $("#ProductCategoryId").data("kendoComboBox").input.val()
        };
    }

    function filterModelsAcc() {
        return {
            ProductCategoryId: $("#ProductCategoryId").val(),
            modelFilter: $("#AccessoriesCategoryId").data("kendoComboBox").input.val()
        };
    }
</script>